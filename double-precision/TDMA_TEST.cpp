#include <chrono>
#include <cmath>
#include <cstdlib>
#include <iostream>
#include <vector>
#include "tdma.h"
#include "utils.h"

int Test1() {
    std::chrono::time_point<std::chrono::system_clock> tstart, tend;
    std::chrono::duration<double> duration;

    size_t Nx = 4;
    double *a, *b, *c, *rhs, *old;
    a = new double[Nx];
    b = new double[Nx];
    c = new double[Nx];
    rhs = new double[Nx];
    old = new double[Nx];

    a[1] = 3.0;
    a[2] = 1.0;
    a[3] = 3.0;
    b[0] = 10.0;
    b[1] = 10.0;
    b[2] = 7.0;
    b[3] = 4.0;
    c[0] = 2.0;
    c[1] = 4.0;
    c[2] = 5.0;
    rhs[0] = 3.0;
    rhs[1] = 4.0;
    rhs[2] = 5.0;
    rhs[3] = 6.0;

    a[0] = double(0.0);
    c[Nx - 1] = double(0.0);

    tstart = std::chrono::system_clock::now();
    TDMA(a, b, c, rhs, old, Nx);
    tend = std::chrono::system_clock::now();
    duration = tend - tstart;
    std::cout << "Max absolute error: " << CpuResultCheck(a, b, c, rhs, old, Nx)
              << std::endl;
    std::cout << "Elapsed: " << duration.count() << " second" << std::endl;

    for (int nx = 0; nx < Nx; nx++) {
        std::cout << old[nx] << " ";
    }
    std::cout << std::endl;
    // result: 0.14877589  0.75612053 -1.00188324  2.25141243

    delete[] a;
    delete[] b;
    delete[] c;
    delete[] rhs;
    delete[] old;

    return 0;
}

int Test2() {
    std::vector<double> a = {
        0.0,           -0.8404157221, -0.6717627081, -0.4180033946,
        -0.9757162295, -0.7541680895, -0.3425710192, -0.2641583805,
        -0.4223205045, -0.4428074673, -0.3467919573, -0.3809590285,
        -0.6748432389, -0.5204907905, -0.2936803944, -0.1423669648,
        -0.9632173219, -0.3599106905, -0.1461595920, -0.1509071158,
        -0.7936869344, -0.6765737047, -0.3887029840, -0.7677196468,
        -0.7224871975, -0.1798047580, -0.3106586583, -0.9115131903,
        -0.9048400827, -0.9586225682, -0.0267722592, -0.1904465478,
        -0.6973543668, -0.4205948417, -0.8601441110, -0.3792720395,
        -0.3175337180, -0.2245695248, -0.3947001390, -0.9152640370,
        -0.2343019798, -0.1032193893, -0.2672975666, -0.2712580446,
        -0.0620233230, -0.2544159124, -0.5891170332, -0.1334892596,
        -0.0615563260, -0.7893472707, -0.7771634332, -0.1520968268,
        -0.3496572464, -0.8766712012, -0.2070901038, -0.6539201092,
        -0.9145897863, -0.2653870469, -0.8081180276, -0.0312527862,
        -0.9398463740, -0.6913803957, -0.3866373105, -0.3368183373,
        -0.2050621400, -0.5291462823, -0.6537522326, -0.2186785431,
        -0.0679856713, -0.2444959599, -0.9447946487, -0.7986478626,
        -0.3538818449, -0.4818482352, -0.1321132222, -0.3612101150,
        -0.7102832051, -0.3385719859, -0.4526859004, -0.4768870948,
        -0.6721421693, -0.3598826141, -0.2035250395, -0.3138034092,
        -0.9585882588, -0.7200826482, -0.5697503154, -0.3807905924,
        -0.7499357628, -0.3807209220, -0.7636618844, -0.7975754162,
        -0.2874744563, -0.0897237000, -0.6121888382, -0.7586443026,
        -0.3164434851, -0.0104769268, -0.4962946233, -0.9869130473};
    std::vector<double> b = {
        2.3447966107, 2.8990012169, 2.6468937730, 2.1286949519, 2.2145413134,
        2.6713625138, 2.1265239322, 2.0734330483, 2.9864214740, 2.7073444398,
        2.2008702216, 2.6299162791, 2.5965412312, 2.9473099637, 2.8209641911,
        2.9951686148, 2.2555908079, 2.7121651490, 2.4321248761, 2.8047606653,
        2.8292452355, 2.1597065149, 2.8208031067, 2.7067808815, 2.9219610119,
        2.0082443767, 2.4821313954, 2.6097203999, 2.5779251142, 2.4957780971,
        2.6387281639, 2.1847880596, 2.3115593588, 2.9549132323, 2.4497614463,
        2.3731812645, 2.4795687425, 2.7062596714, 2.9348410365, 2.8406438957,
        2.7432981464, 2.6646190743, 2.4559806805, 2.8774546627, 2.4208703959,
        2.0929434824, 2.7770029439, 2.0871325003, 2.3195456623, 2.9897279768,
        2.8056683026, 2.6823368529, 2.8791655265, 2.1894621796, 2.9457696649,
        2.4810234527, 2.7803595397, 2.0491554689, 2.8082505243, 2.3861928522,
        2.0399474990, 2.5204369856, 2.0128051939, 2.6780213707, 2.6556494241,
        2.9666084553, 2.0884767899, 2.9561798536, 2.5747421096, 2.7605457178,
        2.9901613698, 2.7349258839, 2.5076608620, 2.7330683945, 2.3452582657,
        2.5185774019, 2.2462468348, 2.9180819797, 2.6797056999, 2.8206794143,
        2.2192994005, 2.5842552759, 2.2242406210, 2.4376710130, 2.6044929215,
        2.5324376852, 2.0106620137, 2.0259692922, 2.4116285767, 2.8869009412,
        2.3006898751, 2.4275895652, 2.6983341330, 2.5030084958, 2.0674341310,
        2.2638611917, 2.4567972475, 2.4009853679, 2.0453865625, 2.9533262911};
    std::vector<double> c = {
        -0.4385099973, -0.6212827556, -0.8398149581, -0.2109208900,
        -0.4628443454, -0.6673138289, -0.7178050746, -0.7838042778,
        -0.3414277601, -0.1706246539, -0.6353170482, -0.0429342884,
        -0.3019074668, -0.0514498416, -0.4344773310, -0.1963597428,
        -0.2152658638, -0.5880420146, -0.6778546561, -0.4437567663,
        -0.3924976264, -0.0894089589, -0.7915933772, -0.0938155634,
        -0.2694293730, -0.4846222754, -0.9418720006, -0.2167264201,
        -0.4481849381, -0.0604411758, -0.7739880461, -0.1025773454,
        -0.8708873600, -0.8039024473, -0.5137705538, -0.4231093576,
        -0.6865221991, -0.7471209316, -0.3439790506, -0.5340513603,
        -0.7475733577, -0.6950120181, -0.8605606364, -0.2807735371,
        -0.3204816798, -0.7507128018, -0.6666562246, -0.5685056872,
        -0.4124532443, -0.6148758478, -0.0724710502, -0.4494480835,
        -0.9408788936, -0.7158518882, -0.6746583082, -0.9048367243,
        -0.2929836466, -0.7278229911, -0.2887844289, -0.8846069282,
        -0.7372518328, -0.6419970580, -0.2473183827, -0.5812334761,
        -0.3188261352, -0.8336712820, -0.7895027622, -0.1190597358,
        -0.6501470980, -0.9439269234, -0.4819579592, -0.9106574685,
        -0.1254123072, -0.3939805494, -0.6242922361, -0.9620370738,
        -0.4055921451, -0.8941440165, -0.0223441609, -0.7288666679,
        -0.8368018295, -0.4253763511, -0.5136848134, -0.6824373312,
        -0.8424428160, -0.4887211907, -0.7387489786, -0.3479867008,
        -0.3747892325, -0.8900304149, -0.6573111890, -0.3502418409,
        -0.7340256450, -0.2265798226, -0.8435964843, -0.6826056872,
        -0.6290857921, -0.8797282320, -0.7553295266, 0.0};
    std::vector<double> rhs = {
        13.9624694580, 16.2393135821, 15.9028828293, 15.4962794413,
        19.4262475717, 12.8798137909, 16.4133299972, 17.2215539633,
        19.2895949417, 18.1916418273, 10.3964883067, 19.7196172225,
        14.7433968215, 17.3610120882, 15.1031725088, 10.8635212670,
        10.8929206064, 19.0929288100, 11.3695680134, 14.4441006976,
        17.7393211004, 17.9760667347, 12.2980952019, 18.5326165089,
        11.1708375990, 17.3038423296, 10.4684142352, 12.2086952944,
        14.1419715565, 15.5436657955, 13.3993822735, 16.4887572644,
        13.9554119848, 18.8950849658, 11.8478269884, 12.4276483306,
        18.6096678213, 17.5426755749, 14.4958600173, 16.9075882799,
        17.2910886390, 16.4062323545, 13.7164838311, 14.7607977096,
        12.7819928986, 19.9301867530, 16.2638280326, 18.4310059367,
        14.7433444595, 17.3935861984, 16.2493139688, 11.5238558762,
        11.5850592596, 19.0749542444, 19.1168897770, 18.8687497964,
        16.8365114854, 16.4302513322, 19.9204795014, 18.5229744994,
        13.3410261145, 10.3165489844, 19.2835455456, 11.1890372707,
        19.0339712318, 14.6264100825, 17.0961511666, 10.7254466188,
        18.6195379990, 15.5978489684, 17.3141190867, 19.9887401726,
        15.7822795796, 10.4751350588, 19.4050986091, 11.1683103400,
        11.9874768284, 16.9438636881, 12.5768207520, 16.2248250406,
        17.7416620166, 13.6867251202, 16.1894931583, 10.8149586800,
        16.0784958694, 17.7740040162, 14.0459875708, 18.8225365478,
        11.5663719882, 11.5087937008, 13.4320363297, 14.7900534762,
        18.3640735279, 18.7411054653, 13.9789494866, 18.7152641812,
        18.5539753928, 19.2663002218, 17.9117922066, 19.9513759941};
    std::vector<double> x = {
        7.9237459780,  10.5290718208, 12.2733774153, 11.3244060904,
        16.4972431770, 13.0890055138, 14.4519266589, 13.7016639993,
        9.4032804583,  8.8044103137,  8.6803790865,  8.9004393430,
        8.8722633306,  7.5764916994,  6.8285153447,  4.4530693508,
        7.6493137885,  9.6231129782,  7.2332808220,  7.1050097530,
        9.8977592472,  11.7827812719, 8.6648934222,  9.5552351250,
        7.2386958298,  11.4197435516, 8.9311649695,  8.6553889677,
        10.3290368926, 10.3835912129, 7.7732744977,  8.8298312981,
        12.8893902009, 11.1170027199, 10.6150721050, 8.9424023004,
        11.2696472833, 9.4602666600,  7.3996631583,  10.1372641846,
        9.5798347320,  8.8473901430,  8.8917419059,  6.6893329833,
        7.3920718199,  14.6603084385, 11.8185670000, 11.8797809333,
        8.4185950913,  9.8258303333,  8.6810672503,  6.4936993591,
        10.1770829876, 16.4164360657, 11.1004192467, 15.0931322353,
        12.5093042587, 14.1298922587, 12.6463267329, 14.4569896999,
        17.6111643988, 12.2040731628, 12.8770599115, 7.7508088216,
        8.9990764470,  10.2721300013, 13.2967873867, 5.0138554776,
        9.9839784772,  10.3757465006, 11.2337416582, 13.4319422783,
        8.5375928273,  6.9673169620,  11.3030825861, 9.9041349590,
        10.0757368464, 8.9014900612,  6.2853989005,  10.5897673299,
        14.6091027569, 9.0373628763,  10.3686193912, 9.7987744777,
        14.3859681537, 14.2403329492, 16.2253364516, 14.1648194530,
        10.6225243823, 9.1478260027,  12.1971747686, 11.6292469243,
        10.6007273590, 9.3962922821,  16.8892243805, 18.0016210014,
        13.5143807220, 14.2295731210, 16.7746207522, 12.3611360478};

    int Nx = x.size();
    a[0] = double(0.0);
    c[Nx - 1] = double(0.0);
    std::cout << "size of a, b, c, rhs, x: " << a.size() << " " << b.size()
              << " " << c.size() << " " << rhs.size() << " " << x.size()
              << std::endl;
    std::vector<double> y(x.size());
    std::vector<double> ma(x.size());
    std::vector<double> mb(x.size());
    std::vector<double> mc(x.size());
    for (int nx = 0; nx < Nx; nx++) {
        y[nx] = rhs[nx];
        ma[nx] = a[nx];
        mb[nx] = b[nx];
        mc[nx] = c[nx];
    }

    TDMAsolve(ma, mb, mc, y, Nx);

    std::cout << "Wiki implementation: ...\n";
    std::cout << "Comparison with the standard result: ";
    for (int nx = 0; nx < Nx; nx++) {
        if (fabs(x[nx] - y[nx]) > 1.0e-6) {
            std::cout << nx << " false ";
        }
    }
    std::cout << std::endl;
    std::cout << "Max absolute error: " << CpuResultCheck(a, b, c, rhs, y, Nx)
              << std::endl;

    std::cout << "Jing's implementation: ...\n";
    TDMA(a, b, c, rhs, y, Nx);
    std::cout << "Comparison with the standard result: ";
    for (int nx = 0; nx < Nx; nx++) {
        if (fabs(x[nx] - y[nx]) > 1.0e-6) {
            std::cout << nx << " false ";
        }
    }
    std::cout << std::endl;
    std::cout << "Max absolute error: " << CpuResultCheck(a, b, c, rhs, y, Nx)
              << std::endl;
}

int Test3() {
    std::vector<double> a = {
        0.0,           -0.8404157221, -0.6717627081, -0.4180033946,
        -0.9757162295, -0.7541680895, -0.3425710192, -0.2641583805,
        -0.4223205045, -0.4428074673, -0.3467919573, -0.3809590285,
        -0.6748432389, -0.5204907905, -0.2936803944, -0.1423669648,
        -0.9632173219, -0.3599106905, -0.1461595920, -0.1509071158,
        -0.7936869344, -0.6765737047, -0.3887029840, -0.7677196468,
        -0.7224871975, -0.1798047580, -0.3106586583, -0.9115131903,
        -0.9048400827, -0.9586225682, -0.0267722592, -0.1904465478,
        -0.6973543668, -0.4205948417, -0.8601441110, -0.3792720395,
        -0.3175337180, -0.2245695248, -0.3947001390, -0.9152640370,
        -0.2343019798, -0.1032193893, -0.2672975666, -0.2712580446,
        -0.0620233230, -0.2544159124, -0.5891170332, -0.1334892596,
        -0.0615563260, -0.7893472707, -0.7771634332, -0.1520968268,
        -0.3496572464, -0.8766712012, -0.2070901038, -0.6539201092,
        -0.9145897863, -0.2653870469, -0.8081180276, -0.0312527862,
        -0.9398463740, -0.6913803957, -0.3866373105, -0.3368183373,
        -0.2050621400, -0.5291462823, -0.6537522326, -0.2186785431,
        -0.0679856713, -0.2444959599, -0.9447946487, -0.7986478626,
        -0.3538818449, -0.4818482352, -0.1321132222, -0.3612101150,
        -0.7102832051, -0.3385719859, -0.4526859004, -0.4768870948,
        -0.6721421693, -0.3598826141, -0.2035250395, -0.3138034092,
        -0.9585882588, -0.7200826482, -0.5697503154, -0.3807905924,
        -0.7499357628, -0.3807209220, -0.7636618844, -0.7975754162,
        -0.2874744563, -0.0897237000, -0.6121888382, -0.7586443026,
        -0.3164434851, -0.0104769268, -0.4962946233, -0.9869130473};
    std::vector<double> b = {
        2.3447966107, 2.8990012169, 2.6468937730, 2.1286949519, 2.2145413134,
        2.6713625138, 2.1265239322, 2.0734330483, 2.9864214740, 2.7073444398,
        2.2008702216, 2.6299162791, 2.5965412312, 2.9473099637, 2.8209641911,
        2.9951686148, 2.2555908079, 2.7121651490, 2.4321248761, 2.8047606653,
        2.8292452355, 2.1597065149, 2.8208031067, 2.7067808815, 2.9219610119,
        2.0082443767, 2.4821313954, 2.6097203999, 2.5779251142, 2.4957780971,
        2.6387281639, 2.1847880596, 2.3115593588, 2.9549132323, 2.4497614463,
        2.3731812645, 2.4795687425, 2.7062596714, 2.9348410365, 2.8406438957,
        2.7432981464, 2.6646190743, 2.4559806805, 2.8774546627, 2.4208703959,
        2.0929434824, 2.7770029439, 2.0871325003, 2.3195456623, 2.9897279768,
        2.8056683026, 2.6823368529, 2.8791655265, 2.1894621796, 2.9457696649,
        2.4810234527, 2.7803595397, 2.0491554689, 2.8082505243, 2.3861928522,
        2.0399474990, 2.5204369856, 2.0128051939, 2.6780213707, 2.6556494241,
        2.9666084553, 2.0884767899, 2.9561798536, 2.5747421096, 2.7605457178,
        2.9901613698, 2.7349258839, 2.5076608620, 2.7330683945, 2.3452582657,
        2.5185774019, 2.2462468348, 2.9180819797, 2.6797056999, 2.8206794143,
        2.2192994005, 2.5842552759, 2.2242406210, 2.4376710130, 2.6044929215,
        2.5324376852, 2.0106620137, 2.0259692922, 2.4116285767, 2.8869009412,
        2.3006898751, 2.4275895652, 2.6983341330, 2.5030084958, 2.0674341310,
        2.2638611917, 2.4567972475, 2.4009853679, 2.0453865625, 2.9533262911};
    std::vector<double> c = {
        -0.4385099973, -0.6212827556, -0.8398149581, -0.2109208900,
        -0.4628443454, -0.6673138289, -0.7178050746, -0.7838042778,
        -0.3414277601, -0.1706246539, -0.6353170482, -0.0429342884,
        -0.3019074668, -0.0514498416, -0.4344773310, -0.1963597428,
        -0.2152658638, -0.5880420146, -0.6778546561, -0.4437567663,
        -0.3924976264, -0.0894089589, -0.7915933772, -0.0938155634,
        -0.2694293730, -0.4846222754, -0.9418720006, -0.2167264201,
        -0.4481849381, -0.0604411758, -0.7739880461, -0.1025773454,
        -0.8708873600, -0.8039024473, -0.5137705538, -0.4231093576,
        -0.6865221991, -0.7471209316, -0.3439790506, -0.5340513603,
        -0.7475733577, -0.6950120181, -0.8605606364, -0.2807735371,
        -0.3204816798, -0.7507128018, -0.6666562246, -0.5685056872,
        -0.4124532443, -0.6148758478, -0.0724710502, -0.4494480835,
        -0.9408788936, -0.7158518882, -0.6746583082, -0.9048367243,
        -0.2929836466, -0.7278229911, -0.2887844289, -0.8846069282,
        -0.7372518328, -0.6419970580, -0.2473183827, -0.5812334761,
        -0.3188261352, -0.8336712820, -0.7895027622, -0.1190597358,
        -0.6501470980, -0.9439269234, -0.4819579592, -0.9106574685,
        -0.1254123072, -0.3939805494, -0.6242922361, -0.9620370738,
        -0.4055921451, -0.8941440165, -0.0223441609, -0.7288666679,
        -0.8368018295, -0.4253763511, -0.5136848134, -0.6824373312,
        -0.8424428160, -0.4887211907, -0.7387489786, -0.3479867008,
        -0.3747892325, -0.8900304149, -0.6573111890, -0.3502418409,
        -0.7340256450, -0.2265798226, -0.8435964843, -0.6826056872,
        -0.6290857921, -0.8797282320, -0.7553295266, 0.0};
    std::vector<double> rhs = {
        13.9624694580, 16.2393135821, 15.9028828293, 15.4962794413,
        19.4262475717, 12.8798137909, 16.4133299972, 17.2215539633,
        19.2895949417, 18.1916418273, 10.3964883067, 19.7196172225,
        14.7433968215, 17.3610120882, 15.1031725088, 10.8635212670,
        10.8929206064, 19.0929288100, 11.3695680134, 14.4441006976,
        17.7393211004, 17.9760667347, 12.2980952019, 18.5326165089,
        11.1708375990, 17.3038423296, 10.4684142352, 12.2086952944,
        14.1419715565, 15.5436657955, 13.3993822735, 16.4887572644,
        13.9554119848, 18.8950849658, 11.8478269884, 12.4276483306,
        18.6096678213, 17.5426755749, 14.4958600173, 16.9075882799,
        17.2910886390, 16.4062323545, 13.7164838311, 14.7607977096,
        12.7819928986, 19.9301867530, 16.2638280326, 18.4310059367,
        14.7433444595, 17.3935861984, 16.2493139688, 11.5238558762,
        11.5850592596, 19.0749542444, 19.1168897770, 18.8687497964,
        16.8365114854, 16.4302513322, 19.9204795014, 18.5229744994,
        13.3410261145, 10.3165489844, 19.2835455456, 11.1890372707,
        19.0339712318, 14.6264100825, 17.0961511666, 10.7254466188,
        18.6195379990, 15.5978489684, 17.3141190867, 19.9887401726,
        15.7822795796, 10.4751350588, 19.4050986091, 11.1683103400,
        11.9874768284, 16.9438636881, 12.5768207520, 16.2248250406,
        17.7416620166, 13.6867251202, 16.1894931583, 10.8149586800,
        16.0784958694, 17.7740040162, 14.0459875708, 18.8225365478,
        11.5663719882, 11.5087937008, 13.4320363297, 14.7900534762,
        18.3640735279, 18.7411054653, 13.9789494866, 18.7152641812,
        18.5539753928, 19.2663002218, 17.9117922066, 19.9513759941};
    std::vector<double> x = {
        7.9237459780,  10.5290718208, 12.2733774153, 11.3244060904,
        16.4972431770, 13.0890055138, 14.4519266589, 13.7016639993,
        9.4032804583,  8.8044103137,  8.6803790865,  8.9004393430,
        8.8722633306,  7.5764916994,  6.8285153447,  4.4530693508,
        7.6493137885,  9.6231129782,  7.2332808220,  7.1050097530,
        9.8977592472,  11.7827812719, 8.6648934222,  9.5552351250,
        7.2386958298,  11.4197435516, 8.9311649695,  8.6553889677,
        10.3290368926, 10.3835912129, 7.7732744977,  8.8298312981,
        12.8893902009, 11.1170027199, 10.6150721050, 8.9424023004,
        11.2696472833, 9.4602666600,  7.3996631583,  10.1372641846,
        9.5798347320,  8.8473901430,  8.8917419059,  6.6893329833,
        7.3920718199,  14.6603084385, 11.8185670000, 11.8797809333,
        8.4185950913,  9.8258303333,  8.6810672503,  6.4936993591,
        10.1770829876, 16.4164360657, 11.1004192467, 15.0931322353,
        12.5093042587, 14.1298922587, 12.6463267329, 14.4569896999,
        17.6111643988, 12.2040731628, 12.8770599115, 7.7508088216,
        8.9990764470,  10.2721300013, 13.2967873867, 5.0138554776,
        9.9839784772,  10.3757465006, 11.2337416582, 13.4319422783,
        8.5375928273,  6.9673169620,  11.3030825861, 9.9041349590,
        10.0757368464, 8.9014900612,  6.2853989005,  10.5897673299,
        14.6091027569, 9.0373628763,  10.3686193912, 9.7987744777,
        14.3859681537, 14.2403329492, 16.2253364516, 14.1648194530,
        10.6225243823, 9.1478260027,  12.1971747686, 11.6292469243,
        10.6007273590, 9.3962922821,  16.8892243805, 18.0016210014,
        13.5143807220, 14.2295731210, 16.7746207522, 12.3611360478};

    int Nx = x.size();
    a[0] = double(0.0);
    c[Nx - 1] = double(0.0);
    std::cout << "size of a, b, c, rhs, x: " << a.size() << " " << b.size()
              << " " << c.size() << " " << rhs.size() << " " << x.size()
              << std::endl;
    std::vector<double> y(x.size());
    std::vector<double> ma(x.size());
    std::vector<double> mb(x.size());
    std::vector<double> mc(x.size());
    for (int nx = 0; nx < Nx; nx++) {
        y[nx] = rhs[nx];
        ma[nx] = a[nx];
        mb[nx] = b[nx];
        mc[nx] = c[nx];
    }

    TDMAsolve(ma, mb, mc, y, Nx);

    std::cout << "Wiki implementation: ...\n";
    std::cout << "Comparison with the standard result: ";
    for (int nx = 0; nx < Nx; nx++) {
        if (fabs(x[nx] - y[nx]) > 1.0e-6) {
            std::cout << nx << " false ";
        }
    }
    std::cout << std::endl;
    std::cout << "Max absolute error: " << CpuResultCheck(a, b, c, rhs, y, Nx)
              << std::endl;

    std::cout << "Jing's implementation: ...\n";
    TDMA(a, b, c, rhs, y, Nx);
    std::cout << "Comparison with the standard result: ";
    for (int nx = 0; nx < Nx; nx++) {
        if (fabs(x[nx] - y[nx]) > 1.0e-6) {
            std::cout << nx << " false ";
        }
    }
    std::cout << std::endl;
    std::cout << "Max absolute error: " << CpuResultCheck(a, b, c, rhs, y, Nx)
              << std::endl;
}

template <typename Type>
int Test4(size_t diagonal_size, Type tolerance) {
    std::chrono::time_point<std::chrono::system_clock> tstart, tend;
    std::chrono::duration<double> duration;

    size_t Nx = diagonal_size;
    Type *a, *b, *c, *rhs, *old;
    a = new Type[Nx];
    b = new Type[Nx];
    c = new Type[Nx];
    rhs = new Type[Nx];
    old = new Type[Nx];

    int trynumber = 100;
    double *cputimes = new double[trynumber];
    bool *cpuresultcheck = new bool[trynumber];

    for (int count = 0; count < trynumber; count++) {
        for (int i = 0; i < diagonal_size; i++) {
            a[i] = -1.0 + 0.1 * Type(rand()) / Type(RAND_MAX);
            b[i] = 2.0 + 0.1 * Type(rand()) / Type(RAND_MAX);
            c[i] = -1.0 + 0.1 * Type(rand()) / Type(RAND_MAX);
            rhs[i] =
                20.0 * (1.0 - 0.5) * Type(rand()) / Type(RAND_MAX) + 10.0;
            old[i] = 0.0;
        }

        a[0] = Type(0.0);
        c[Nx - 1] = Type(0.0);

        tstart = std::chrono::system_clock::now();
        TDMA(a, b, c, rhs, old, Nx);
        tend = std::chrono::system_clock::now();
        duration = tend - tstart;
        cputimes[count] = duration.count();
        cpuresultcheck[count] = (CpuResultCheck(a, b, c, rhs, old, Nx) < tolerance);
    }

    std::cout << "Diagonal size: " << diagonal_size << std::endl;
    std::cout << "correct results: " << correctcount(cpuresultcheck, trynumber)
              << " / " << trynumber << ", tolerance: " << tolerance << std::endl;

    delete[] a;
    delete[] b;
    delete[] c;
    delete[] rhs;
    delete[] old;
    delete[] cputimes;
    delete[] cpuresultcheck;

    return 0;
}

int main() {
    // Generate sampel data
    srand(time(NULL));
    std::cout << "Test of the accuracy and efficiency of tdma algorithm that "
                 "solves the tridiagonal matrix."
              << std::endl;
    std::cout << "Test 1....\n";
    Test1();

    std::cout << "\nTest 2: accuracy test on single-precision double....\n";
    Test2();

    std::cout << "\nTest 3: accuracy test on double-precision double....\n";
    Test3();

    std::cout << "\nTest 4: accuracy test on double-precision double....\n";
    Test4<double>(10, 1.0e-10);

    std::cout << "\nTest 5: accuracy test on double-precision double....\n";
    Test4<double>(100, 1.0e-10);

    std::cout << "\nTest 6: accuracy test on double-precision double....\n";
    Test4<double>(500, 1.0e-10);

    std::cout << "\nTest 7: accuracy test on double-precision double....\n";
    Test4<double>(1000, 1.0e-10);

    std::cout << "\nTest 8: accuracy test on double-precision double....\n";
    Test4<double>(10000, 1.0e-10);

    std::cout << "\nTest 9: accuracy test on single-precision double....\n";
    Test4<double>(10, 1.0e-5);

    std::cout << "\nTest 10: accuracy test on single-precision double....\n";
    Test4<double>(100, 1.0e-5);

    std::cout << "\nTest 11: accuracy test on single-precision double....\n";
    Test4<double>(500, 1.0e-5);

    std::cout << "\nTest 12: accuracy test on single-precision double....\n";
    Test4<double>(1000, 1.0e-5);

    std::cout << "\nTest 13: accuracy test on single-precision double....\n";
    Test4<double>(10000, 1.0e-5);

    return 0;
}
